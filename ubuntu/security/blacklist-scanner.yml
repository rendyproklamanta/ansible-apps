- name: Block IPs from GitHub source using ipset
  hosts: localhost
  connection: local
  become: true

  tasks:
    - name: Ensure required packages are installed
      apt:
        name:
          - ipset
          - curl
        state: present
        update_cache: yes

    - name: Fetch deny_ips.txt from GitHub
      get_url:
        url: https://raw.githubusercontent.com/fistwho/ipscanner-block-ufw/main/deny_ips.txt
        dest: /tmp/deny_ips.txt
        mode: '0644'

    - name: Filter valid IP addresses
      shell: |
        grep -E '^([0-9]{1,3}\.){3}[0-9]{1,3}(/[0-9]+)?$|^([a-fA-F0-9:]+:+)+[a-fA-F0-9]+(/[0-9]+)?$' /tmp/deny_ips.txt
      register: valid_ips

    - name: Create ipset blocklist
      command: sudo ipset create scanner_blacklist hash:net
      ignore_errors: yes

    - name: Add valid IPs to ipset blocklist
      shell: |
        for ip in {{ valid_ips.stdout_lines | join(' ') }}; do
          sudo ipset add scanner_blacklist "$ip";
        done
      args:
        executable: /bin/bash
      ignore_errors: yes

    - name: Integrate ipset with iptables
      command: sudo iptables -I INPUT -m set --match-set scanner_blacklist src -j DROP

    - name: Save ipset rules to file
      shell: sudo ipset save > /etc/ipset.rules

    - name: Ensure iptables directory exists
      file:
        path: /etc/iptables
        state: directory
        mode: '0755'

    - name: Save iptables rules
      shell: sudo iptables-save > /etc/iptables/rules.v4

    - name: Create systemd service for scanner_blacklist ipset restore
      copy:
        dest: /etc/systemd/system/ipset-restore-scanner-blacklist.service
        content: |
          [Unit]
          Description=Restore scanner_blacklist ipset rules
          Before=network-pre.target
          Wants=network-pre.target

          [Service]
          Type=oneshot
          ExecStartPre=/bin/bash -c "ipset list scanner_blacklist || ipset create scanner_blacklist hash:net"
          ExecStartPre=/bin/bash -c "grep -E '^ *(add +scanner_blacklist)' /etc/ipset.rules | while read -r line; do ipset restore -exist <<< \"$line\"; done"
          ExecStart=/bin/bash -c "ipset restore -exist < /etc/ipset/ipset.rules"
          ExecStop=/sbin/ipset flush
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd configuration
      command: sudo systemctl daemon-reload

    - name: Enable and start ipset-restore-scanner-blacklist service
      systemd:
        name: ipset-restore-scanner-blacklist.service
        enabled: true
        state: started

  handlers:
    - name: Reload systemd
      command: sudo systemctl daemon-reload

## Check status
## sudo systemctl status ipset-restore-scanner-blacklist.service